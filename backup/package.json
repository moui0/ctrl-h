{
  "name": "ctrl-h",
	"displayName": "Ctrl-H",
	"description": "",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:references-view.findReferences",
		"onCommand:editor.action.showReferences",
		"onView:references-view.tree"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"properties": {
				"references.preferredLocation": {
					"description": "Controls whether 'Peek References' or 'Find References' is invoked when selecting code lens references",
					"type": "string",
					"default": "peek",
					"enum": [
					"peek",
					"view"
					],
					"enumDescriptions": [
					"Show references in peek editor.",
					"Show references in separate view."
					]
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "references-view",
					"icon": "$(references)",
					"title": "References"
				}
			]
		},
		"views": {
			"references-view": [
				{
					"id": "references-view.tree",
					"name": "References",
					"icon": "$(references)"
				}
			]
		},
		"commands": [
			{
				"command": "references-view.findReferences",
				"title": "Find All References",
				"category": "References"
			},
			{
				"command": "references-view.clearHistory",
				"title": "Clear History",
				"category": "References",
				"icon": "$(clear-all)"
			},
			{
				"command": "references-view.clear",
				"title": "Clear",
				"category": "References",
				"icon": "$(clear-all)"
			},
			{
				"command": "references-view.refresh",
				"title": "Refresh",
				"category": "References",
				"icon": "$(refresh)"
			},
			{
				"command": "references-view.pickFromHistory",
				"title": "Show History",
				"category": "References"
			},
			{
				"command": "references-view.removeReferenceItem",
				"title": "Dismiss",
				"icon": "$(close)"
			},
			{
				"command": "references-view.copy",
				"title": "Copy"
			},
			{
				"command": "references-view.copyAll",
				"title": "Copy All"
			},
			{
				"command": "references-view.copyPath",
				"title": "Copy Path"
			},
			{
				"command": "references-view.refind",
				"title": "Rerun",
				"icon": "$(refresh)"
			},
			{
				"command": "references-view.next",
				"title": "Go to Next Reference",
				"enablement": "references-view.canNavigate"
			},
			{
				"command": "references-view.prev",
				"title": "Go to Previous Reference",
				"enablement": "references-view.canNavigate"
			}
		],
		"menus": {
		"editor/context": [
			{
				"command": "references-view.findReferences",
				"when": "editorHasReferenceProvider",
				"group": "0_navigation@1"
			}
		],
		"view/title": [
			{
				"command": "references-view.clear",
				"group": "navigation@3",
				"when": "view == references-view.tree && reference-list.hasResult"
			},
			{
				"command": "references-view.clearHistory",
				"group": "navigation@3",
				"when": "view == references-view.tree && reference-list.hasHistory && !reference-list.hasResult"
			},
			{
				"command": "references-view.refresh",
				"group": "navigation@2",
				"when": "view == references-view.tree && reference-list.hasResult"
			}
		],
		"view/item/context": [
			{
				"command": "references-view.removeReferenceItem",
				"group": "inline",
				"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == result-item"
			},
			{
				"command": "references-view.refind",
				"group": "inline",
				"when": "view == references-view.tree && viewItem == history-item"
			},
			{
				"command": "references-view.removeReferenceItem",
				"group": "1",
				"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == result-item"
			},
			{
				"command": "references-view.refind",
				"group": "1",
				"when": "view == references-view.tree && viewItem == history-item"
			},
			{
				"command": "references-view.copy",
				"group": "2@1",
				"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == result-item"
			},
			{
				"command": "references-view.copyPath",
				"group": "2@2",
				"when": "view == references-view.tree && viewItem == file-item"
			},
			{
				"command": "references-view.copyAll",
				"group": "2@3",
				"when": "view == references-view.tree && viewItem == file-item || view == references-view.tree && viewItem == result-item"
			}
		],
		"commandPalette": [
			{
				"command": "references-view.removeReferenceItem",
				"when": "never"
			},
			{
				"command": "references-view.copy",
				"when": "never"
			},
			{
				"command": "references-view.copyAll",
				"when": "never"
			},
			{
				"command": "references-view.copyPath",
				"when": "never"
			},
			{
				"command": "references-view.refind",
				"when": "never"
			},
			{
				"command": "references-view.findReferences",
				"when": "editorHasReferenceProvider"
			},
			{
				"command": "references-view.clear",
				"when": "reference-list.hasResult"
			},
			{
				"command": "references-view.clearHistory",
				"when": "reference-list.isActive && !reference-list.hasResult"
			},
			{
				"command": "references-view.refresh",
				"when": "reference-list.hasResult"
			},
			{
				"command": "references-view.pickFromHistory",
				"when": "reference-list.isActive"
			},
			{
				"command": "references-view.next",
				"when": "never"
			},
			{
				"command": "references-view.prev",
				"when": "never"
			}
		]
		},
		"keybindings": [
			{
				"command": "references-view.findReferences",
				"when": "editorHasReferenceProvider",
				"key": "shift+alt+f12"
			},
			{
				"command": "references-view.next",
				"when": "reference-list.hasResult",
				"key": "f4"
			},
			{
				"command": "references-view.prev",
				"when": "reference-list.hasResult",
				"key": "shift+f4"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.67.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "14.x",
		"@typescript-eslint/eslint-plugin": "^5.21.0",
		"@typescript-eslint/parser": "^5.21.0",
		"eslint": "^8.14.0",
		"glob": "^8.0.1",
		"mocha": "^9.2.2",
		"typescript": "^4.6.4",
		"@vscode/test-electron": "^2.1.3"
	}
}
